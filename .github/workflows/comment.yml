name: Rspec release and build

on:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}

env:
  TREAD_COUNT: 8
  COMPOSE_PROJECT_NAME: release_${{github.run_number}}
  RUN_NUMBER: ${{github.run_number}}
  GITHUB_TOKEN: ${{ secrets.PAT_APPODEAL_RUNNER }}

jobs:
  parallel_rspec:
    runs-on: self-hosted
    steps:
      - name: Login registry
        uses: docker/login-action@v1
        with:
          registry: registry.appodeal.com
          username: ${{ secrets.REGISTRY_APPODEAL_USERNAME_DEPLOY }}
          password: ${{ secrets.REGISTRY_APPODEAL_PASSWORD_DEPLOY }}

      - uses: actions/checkout@v3
      - name: Build image
        run: make docker-build-rspec AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_GITHUB_ACTIONS }} AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_GITHUB_ACTIONS }}

      - name: Start docker compose
        run: |
          docker pull registry.appodeal.com/appodeal/postgis-rspec:11-2.5
          docker-compose -f docker-compose-rspec.yml up -d

      - name: Run migrations
        run: docker exec -i ${COMPOSE_PROJECT_NAME}_rspec_1 /bin/bash -c -l "RAILS_ENV=test bundle exec rake parallel:migrate[$TREAD_COUNT]"

      - name: Run tests
        run: docker exec -i ${COMPOSE_PROJECT_NAME}_rspec_1 /bin/bash -c -l "bundle exec rake parallel:spec[$TREAD_COUNT]"

      - name: Copy reports
        if: always()
        run: docker cp ${COMPOSE_PROJECT_NAME}_rspec_1:/app/jenkins/ ./reports/

      - name: Publish tests results
        if: always()
        uses: mikepenz/action-junit-report@v3
        with:
          check_name: Tests report
          report_paths: 'reports/*.xml'

      - name: Upload tests results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Reports rspec
          path: reports/*/tests?.html

      - name: Stop compose
        if: always()
        run: |
          docker-compose -f docker-compose-rspec.yml down
          docker network prune -f

  build-api:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Get last tag
        run: echo "TAG=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV

      - name: Checkout last release
        run: git checkout ${TAG}

      - name: Build image
        run: make docker-build-prod-api TAG=${TAG} AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_GITHUB_ACTIONS }} AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_GITHUB_ACTIONS }}

      - name: Push image
        run: echo "make docker-push-prod-api TAG=${TAG}"

  build-www:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Get last tag
        run: echo "TAG=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV

      - name: Checkout last release
        run: git checkout ${TAG}

      - name: Build image
        run: make docker-build-prod-www TAG=${TAG} AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_GITHUB_ACTIONS }} AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_GITHUB_ACTIONS }}

      - name: Push image
        run: echo "make docker-push-prod-www TAG=${TAG}"

  canary:
    needs: [parallel_rspec, build-api, build-www]
    runs-on: self-hosted
    steps:
      - name: Start deploy
        run: |
          curl \
            -X POST \
            -u "appodeal-runner":"${{ secrets.PAT_APPODEAL_RUNNER }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/appodeal/AppODeal/actions/workflows/prod-deploy.yml/dispatches \
            -d '{"ref":"master","inputs":{"DEPLOY_TYPE_API":"ruby-unicorn-api-unicorn1 ruby-unicorn-canary","DEPLOY_TYPE":""}}'
